google-perftools for ruby code
  (c) 2009 Aman Gupta (tmm1)

=== Usage

  Run the profiler with a block:

    require 'perftools'
    PerfTools::CpuProfiler.start("/tmp/add_numbers_profile") do
      5_000_000.times{ 1+2+3+4+5 }
    end

  Start and stop the profiler manually:

    require 'perftools'
    PerfTools::CpuProfiler.start("/tmp/add_numbers_profile")
    5_000_000.times{ 1+2+3+4+5 }
    PerfTools::CpuProfiler.stop

  Profile an existing ruby application without modifying it:

    $ CPUPROFILE=/tmp/my_app_profile RUBYOPT="-r`gem which perftools | tail -1`" ruby my_app.rb


=== Reporting

  pprof.rb --text /tmp/add_numbers_profile

  pprof.rb --pdf /tmp/add_numbers_profile > /tmp/add_numbers_profile.pdf

  pprof.rb --gif /tmp/add_numbers_profile > /tmp/add_numbers_profile.gif

  pprof.rb --callgrind /tmp/add_numbers_profile > /tmp/add_numbers_profile.grind
  kcachegrind /tmp/add_numbers_profile.grind

  pprof.rb --gif --focus=Integer /tmp/add_numbers_profile > /tmp/add_numbers_custom.gif

  pprof.rb --text --ignore=Gem /tmp/my_app_profile


  For more options, see http://google-perftools.googlecode.com/svn/trunk/doc/cpuprofile.html#pprof


=== Examples

  pprof.rb --text

    Total: 1735 samples
        1487  85.7%  85.7%     1735 100.0% Integer#times
         248  14.3% 100.0%      248  14.3% Fixnum#+

  pprof.rb --gif

    Simple require 'rubygems' profile

      http://github.com/tmm1/perftools.rb/blob/master/examples/rubygems.gif

    Comparing redis-rb with and without SystemTimer based socket timeouts

      http://github.com/tmm1/perftools.rb/blob/master/examples/redis-rb.gif
      http://github.com/tmm1/perftools.rb/blob/master/examples/redis-rb-notimeout.gif

    Sinatra vs. Merb vs. Rails

      http://github.com/tmm1/perftools.rb/blob/master/examples/sinatra.gif
      http://github.com/tmm1/perftools.rb/blob/master/examples/merb.gif
      http://github.com/tmm1/perftools.rb/blob/master/examples/rails.gif

    C-level profile of EventMachine + epoll + Ruby threads
      (before http://timetobleed.com/6-line-eventmachine-bugfix-2x-faster-gc-1300-requestssec/)

      http://github.com/tmm1/perftools.rb/blob/master/examples/eventmachine-epoll+nothreads.gif
      http://github.com/tmm1/perftools.rb/blob/master/examples/eventmachine-epoll+threads.gif

    C-level profile of the ruby interpreter
      (12% re_match_exec is caused by excessive use of rb_str_sub_bang by Date.parse,
       fixed using the ThirdBase gem)

      http://github.com/tmm1/perftools.rb/blob/master/examples/ruby_interpreter.gif


=== Installation

  You'll need a patched version of Ruby 1.8:

    wget ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.6-p368.tar.gz
    tar zxvf ruby-1.8.6-p368.tar.gz
    cd ruby-1.8.6-p368

    wget http://github.com/tmm1/perftools.rb/raw/master/patches/ruby.patch
    patch -p1 < ruby.patch

    ./configure --prefix=/opt/ruby-profiling
    make
    sudo make install

  Install rubygems:

    wget http://rubyforge.org/frs/download.php/57643/rubygems-1.3.4.tgz
    tar zxvf rubygems-1.3.4.tgz
    cd rubygems-1.3.4
    /opt/ruby-profiling/bin/ruby setup.rb

  Install the perftools.rb gem, which will download and compile google-perftools for you:

    git clone git://github.com/tmm1/perftools.rb
    cd perftools.rb
    gem build perftools.rb.gemspec
    /opt/ruby-profiling/bin/gem install perftools.rb


=== TODO

  * Add support for heap profiling to find memory leaks (PerfTools::HeapProfiler)


=== Resources

  Google Perftools
    http://code.google.com/p/google-perftools/

  Analyzing profiles and interpreting different output formats
    http://google-perftools.googlecode.com/svn/trunk/doc/cpuprofile.html#pprof
